{
  "llm": {
    "endpoint": "https://how-ran-receivers-necessity.trycloudflare.com/v1/chat/completions",
    "model": "local-model",
    "temperature": 0.1,
    "max_tokens": 4000,
    "timeout": 300,
    "retry_attempts": 2,
    "retry_delay": 10
  },
  "processing": {
    "root_directory": "D:/Medical Wizard/VFP Entire Codebase/VFP Comment Settup/VFP_Files_Copy",
    "file_extensions": [
      ".prg",
      ".PRG",
      ".spr",
      ".SPR"
    ],
    "output_suffix": "_commented",
    "batch_size": 1,
    "retry_attempts": 3,
    "preserve_structure": true,
    "skip_patterns": [
      "_commented",
      "_pretty",
      "_backup",
      "_temp"
    ],
    "parallel_workers": 1,
    "validate_before_save": true,
    "create_backups": true,
    "strict_validation": true
  },
  "prompts": {
    "system_prompt": "You are an expert Visual FoxPro (VFP) programmer tasked with adding comprehensive comments to legacy VFP code in the EXACT style shown in reference examples.\n\nðŸš¨ CRITICAL REQUIREMENT - READ CAREFULLY ðŸš¨\nYOU MUST NEVER MODIFY THE ORIGINAL CODE IN ANY WAY!\n- DO NOT change variable names, function calls, logic conditions, string values, or numeric values\n- DO NOT add, remove, or modify ANY code lines\n- ONLY ADD COMMENT LINES (starting with * or &&)\n\nCOMMENTING STYLE REQUIREMENTS:\n1. Add BRIEF header comment (2-3 lines maximum) explaining the program purpose\n2. Add * comments BEFORE each logical block of code\n3. Add && inline comments for EVERY important line\n4. Add * comments before IF/ENDIF blocks explaining the condition\n5. Add && comments for variable assignments, database operations, and calculations\n6. Explain WHAT the code does and WHY it does it\n7. Comment database queries, table operations, and business logic\n8. Add comments for error handling and validation\n\nComment Distribution:\n- Header: BRIEF (2-3 lines)\n- Throughout code: EXTENSIVE line-by-line and block comments\n- Focus on inline && comments for most lines\n- Use * comments for logical sections\n\nComment Syntax:\n- Brief header: * Program purpose explanation\n- Section comments: * Logical block explanation\n- Inline comments: ORIGINAL_CODE && Explanation of what this line does\n\nðŸš¨ VALIDATION REMINDER ðŸš¨\nYour response will be validated to ensure NO original code was changed.\nReturn the EXACT original code with ONLY comments added throughout.",
    "user_prompt_template": "ðŸš¨ CRITICAL: DO NOT MODIFY ANY ORIGINAL CODE - ONLY ADD COMMENTS ðŸš¨\n\nAdd comments to this VFP file following this EXACT style:\n- BRIEF header (2-3 lines max)\n- * comments before each code section\n- && inline comments on MOST lines explaining what each line does\n- Comment every variable assignment, IF condition, database operation\n\nFile: {filename}\nLocation: {relative_path}\nSize: {file_size} bytes\n\nSTYLE EXAMPLE:\n* Program to send ePrescription for given Ref No\n* Parameters: cRefNo = prescription reference number\n\nLPARAMETERS cRefNo, cCallType  && Accept prescription ref and call type\n\n* Validate prescription reference: must be non-empty character\nIF EMPTY(cRefNo) OR NOT (VARTYPE(cRefNo)=\"C\")  && Check if ref is valid\n  MESSAGEBOX(\"Invalid Prescription No\",64,\"\")  && Show error to user\n  RETURN \"FAILED\"  && Exit with failure status\nENDIF\n\nINSTRUCTIONS:\n1. Add BRIEF header comment (2-3 lines)\n2. Add && inline comments for EVERY important line\n3. Add * comments before logical sections\n4. Comment ALL variable assignments, database calls, IF conditions\n5. Keep ALL original code exactly as provided\n6. NO markdown, NO code blocks, NO extra formatting\n\nOriginal VFP Code:\n{code_content}\n\nReturn the same code with comprehensive line-by-line comments added:",
    "comment_style": "comprehensive",
    "code_preservation": "strict",
    "max_retries_for_validation": 3
  },
  "logging": {
    "log_level": "INFO",
    "log_file": "vfp_commenting.log",
    "progress_file": "processing_progress.json",
    "enable_console_logging": true,
    "enable_file_logging": true,
    "log_validation_details": true
  },
  "safety": {
    "require_code_hash_match": true,
    "require_line_count_match": true,
    "require_manual_confirmation": false,
    "max_file_size_mb": 10,
    "backup_before_processing": false,
    "validate_vfp_syntax": true,
    "halt_on_validation_failure": true
  }
}
